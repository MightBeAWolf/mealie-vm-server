# Give the VM its name and id number.
# NOTE that the id number must be unique to a cluster node and no other VM on
# that node may use the same id number.
name = "{{ inventory_hostname }}"
id = "{{ id }}"
desc = "{{ desc }}"


### DEPLOY INFO ###
# Specify the target and API url of the proxmox pve node we're deploying to.
target_node = "{{ proxmox_node_id }}"
pm_api_uri = "{{ host_api_uri }}"

# Specifiy the name of the template to clone the VM from. This template must be
# on the same node that we are deploying to.
from_template = "{{ deploy_vms_template | default('debian-12-base') }}"

### META SETTINGS ###
# Specify whether or not to start the VM when the node is booted.
start_vm_on_boot = {{ start_on_boot | default(true) | string | lower }}
# Give the VM tags to help with identification. Helpful tags may the linux 
# distro.
tags = "{{ tags }}"
# The resource pool to which the VM will be added.
pool = "{{ pool | default('') }}"

### NETWORKING
# Specify the ipv4 address of the VM we're deploying
ipv4 = "{{ ansible_host }}"
# Specify the gateway and CIDR mask of the network
gateway = "{{ gateway }}"
cidr = "{{ cidr | default('/24') }}"
network = {
    bridge   = "{{ network.bridge | default('vmbr0') }}"
    model    = "{{ network.model | default('virtio') }}"
    tag      = {{ network.tag | default(-1) }}
    firewall = {{ network.firewall | default(true) | string | lower }}
}

### HARDWARE ###
compute = {
  # The number of CPU sockets to allocate to the VM.
  sockets = {{ compute.sockets | default('1') }}
  # The number of CPU cores per CPU socket to allocate to the VM
  cores   = {{ compute.cores | default('1') }}
  # The amount of memory to allocate to the VM in Megabytes.
  memory  = {{ compute.memory | default('2048') }}
}
disk = {
  # Storage locations, "local", "local-lvm", "local"
  # Main storage is recommended.
  storage = "{{ disk.location | default('local-lvm') }}"
  # The size of the created disk. Accepts K for kibibytes, M for mebibytes, G
  # for gibibytes, T for tibibytes. When only a number is provided gibibytes
  # is assumed.
  size    = "{{ disk.size | default('20') }}"
  # Whether the drive should be included when making backups.
  backup  = {{ disk.backup | default(true) | string | lower }}
}
